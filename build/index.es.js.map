{"version":3,"file":"index.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/hooks/useIsMounted.ts","../src/components/Wallet/index.tsx","../src/components/Liquidity/LiquidityCard.tsx","../src/components/Common/SingleInput.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { useState, useEffect } from \"react\";\n\nexport default function useIsMounted() {\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => setMounted(true), []);\n  return mounted;\n}\n","import React from \"react\";\nimport { ConnectKitButton } from \"connectkit\";\nimport useIsMounted from \"../../hooks/useIsMounted\";\n\nconst Wallet = () => {\n  const isMounted = useIsMounted();\n\n  if (!isMounted) return null;\n\n  return (\n    <ConnectKitButton.Custom>\n      {({ isConnected, show, truncatedAddress, ensName }) => {\n        return (\n          <button\n            className=\"w-full py-4 bg-zinc-800 text-zinc-100 rounded-lg\"\n            onClick={show}\n          >\n            {isConnected ? ensName ?? truncatedAddress : \"Connect Wallet\"}\n          </button>\n        );\n      }}\n    </ConnectKitButton.Custom>\n  );\n};\n\nexport default Wallet;\n","import React, { FC, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Tab } from \"@headlessui/react\";\nimport {\n  getStrategyInfo,\n  getLiquidityRatio,\n  isStrategyTokenApproved,\n  getStrategyMetaData,\n  approveStrategyToken,\n  getUserDeshareBalance,\n  depositLP,\n  removeLP,\n  getRanges,\n} from \"@defiedge/sdk\";\nimport { SupportedChainId } from \"@defiedge/sdk/dist/src/types\";\nimport {\n  Strategy,\n  Token,\n} from \"@defiedge/sdk/dist/src/types/strategyQueryData\";\nimport { Strategy as MetadataStrategy } from \"@defiedge/sdk/dist/src/types/strategyMetaQuery\";\nimport { Address, useAccount, useBalance, useSigner, useToken } from \"wagmi\";\nimport { ethers } from \"ethers\";\nimport clsx from \"clsx\";\nimport axios from \"axios\";\nimport Wallet from \"../Wallet\";\nimport SingleInput from \"../Common/SingleInput\";\nimport useIsMounted from \"../../hooks/useIsMounted\";\n\ninterface LiquidityCardProps {\n  strategyAddress: string;\n  network: SupportedChainId;\n  color?: string;\n}\n\ntype DepositType = \"BOTH\" | \"SINGLE\";\n\nenum SingleSideTokenType {\n  ZERO,\n  ONE,\n}\n\nconst LiquidityCard: FC<LiquidityCardProps> = ({\n  strategyAddress,\n  network,\n  color = \"#2463EB\",\n}) => {\n  const isMounted = useIsMounted();\n  const { address, isConnected } = useAccount();\n  const { data: signer } = useSigner();\n  const provider = signer?.provider as ethers.providers.JsonRpcProvider;\n\n  const [strategy, setStrategy] = useState<\n    (Strategy & MetadataStrategy) | null\n  >(null);\n\n  const [isToken0Approved, setIsToken0Approved] = useState<boolean>(false);\n  const [isToken1Approved, setIsToken1Approved] = useState<boolean>(false);\n  const [liquidityRatio, setLiquidityRatio] = useState<number>(0);\n  const [userShare, setUserShare] = useState<string | undefined>();\n  const [userShareFraction, setUserShareFraction] = useState<number>(0);\n  const [strategyAmount0, setStrategyAmount0] = useState<number>(0);\n  const [strategyAmount1, setStrategyAmount1] = useState<number>(0);\n  const [currentRange, setCurrentRange] = useState<\n    | {\n        lowerTickInA: number;\n        upperTickInA: number;\n        lowerTickInB: number;\n        upperTickInB: number;\n      }\n    | undefined\n  >();\n\n  const [amount0, setAmount0] = useState<string>(\"\");\n  const [amount1, setAmount1] = useState<string>(\"\");\n  const [removePercentage, setRemovePercentage] = useState<string>(\"25\");\n\n  const [depositType, setDepositType] = useState<DepositType>(\"BOTH\");\n  const [singleSideToken, setSingleSideToken] = useState<Token | undefined>(\n    strategy?.token0\n  );\n  const [depositError, setDepositError] = useState<string | null>(null);\n  const [withdrawError, setWithdrawError] = useState<string | null>(null);\n  const [rangeToken, setRangeToken] = useState<Token | undefined>(\n    strategy?.token0\n  );\n\n  const singleSideTokenType = useMemo(\n    () =>\n      singleSideToken?.symbol === strategy?.token0.symbol\n        ? SingleSideTokenType.ZERO\n        : SingleSideTokenType.ONE,\n    [singleSideToken?.symbol, strategy?.token0.symbol]\n  );\n\n  // loading states\n  const [depositLoading, setDepositLoading] = useState<boolean>(false);\n  const [withdrawLoading, setWithdrawLoading] = useState<boolean>(false);\n  const [approve0Loading, setApprove0Loading] = useState<boolean>(false);\n  const [approve1Loading, setApprove1Loading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!strategyAddress) return;\n\n    Promise.all([\n      getStrategyInfo(network, strategyAddress),\n      getStrategyMetaData(network, strategyAddress),\n    ]).then(([info, metadata]) => {\n      setStrategy({ ...info, ...metadata });\n      setSingleSideToken(info.token0);\n      setRangeToken(info.token0);\n    });\n  }, [network, strategyAddress]);\n\n  useEffect(() => {\n    if (!provider) return;\n\n    Promise.all([\n      getLiquidityRatio(strategyAddress, provider),\n      getRanges(strategyAddress, provider),\n    ]).then(([liquidityRatio, ranges]) => {\n      setLiquidityRatio(liquidityRatio);\n      setCurrentRange(ranges[0] as any);\n    });\n  }, [provider, strategyAddress]);\n\n  const fetchAllowances = useCallback(() => {\n    if (!address || !provider) return;\n\n    Promise.all([\n      isStrategyTokenApproved(\n        address,\n        0,\n        amount0 ?? 0,\n        strategyAddress,\n        provider\n      ),\n      isStrategyTokenApproved(\n        address,\n        1,\n        amount1 ?? 0,\n        strategyAddress,\n        provider\n      ),\n    ]).then(([token0, token1]) => {\n      setIsToken0Approved(token0);\n      setIsToken1Approved(token1);\n    });\n  }, [address, amount0, amount1, provider, strategyAddress]);\n\n  const { data: token0Balance, refetch: refetchBalance0 } = useBalance({\n    address,\n    token: strategy?.token0.id as Address,\n  });\n\n  const { data: token1Balance, refetch: refetchBalance1 } = useBalance({\n    address,\n    token: strategy?.token1.id as Address,\n  });\n\n  const { data: strategyToken } = useToken({\n    address: strategyAddress as Address,\n  });\n\n  useEffect(() => {\n    if (depositType === \"BOTH\") {\n      if (!amount0 || !amount1) {\n        setDepositError(\"Enter Amount\");\n      } else if (\n        amount0 &&\n        token0Balance &&\n        Number(amount0) > Number(token0Balance?.formatted)\n      ) {\n        setDepositError(`Insufficient ${strategy?.token0.symbol} balance`);\n      } else if (\n        amount1 &&\n        token1Balance &&\n        Number(amount1) > Number(token1Balance?.formatted)\n      ) {\n        setDepositError(`Insufficient ${strategy?.token1.symbol} balance`);\n      } else {\n        setDepositError(null);\n      }\n    } else if (depositType === \"SINGLE\") {\n      if (singleSideTokenType === SingleSideTokenType.ZERO) {\n        if (!amount0) {\n          setDepositError(\"Enter Amount\");\n        } else if (\n          amount0 &&\n          token0Balance &&\n          Number(amount0) > Number(token0Balance?.formatted)\n        ) {\n          setDepositError(`Insufficient ${strategy?.token0.symbol} balance`);\n        } else {\n          setDepositError(null);\n        }\n      } else if (singleSideTokenType === SingleSideTokenType.ONE) {\n        if (!amount1) {\n          setDepositError(\"Enter Amount\");\n        } else if (\n          amount1 &&\n          token1Balance &&\n          Number(amount1) > Number(token1Balance?.formatted)\n        ) {\n          setDepositError(`Insufficient ${strategy?.token1.symbol} balance`);\n        } else {\n          setDepositError(null);\n        }\n      }\n    }\n  }, [\n    amount0,\n    amount1,\n    depositType,\n    singleSideTokenType,\n    strategy?.token0.symbol,\n    strategy?.token1.symbol,\n    token0Balance,\n    token1Balance,\n  ]);\n\n  useEffect(() => {\n    if (!Number(userShare)) {\n      setWithdrawError(`No Shares to Remove`);\n    } else {\n      setWithdrawError(null);\n    }\n  }, [userShare]);\n\n  const fetchUserShares = useCallback(() => {\n    if (!address || !provider) return;\n\n    getUserDeshareBalance(address, strategyAddress, provider).then((data) => {\n      setUserShare(data);\n\n      if (strategyToken) {\n        const fraction =\n          Number(data) / Number(strategyToken.totalSupply.formatted);\n\n        setUserShareFraction(fraction);\n      }\n    });\n  }, [address, provider, strategyAddress, strategyToken]);\n\n  useEffect(() => {\n    fetchAllowances();\n    fetchUserShares();\n    axios\n      .get(\n        `https://api.defiedge.io/${\n          Object.entries(SupportedChainId).find((e) => e[1] === network)![0]\n        }/${strategyAddress}/liquidity`\n      )\n      .then(({ data }) => {\n        setStrategyAmount0(data.amount0Total);\n        setStrategyAmount1(data.amount1Total);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }, [fetchAllowances, fetchUserShares, network, strategyAddress]);\n\n  const handleToken0Max = useCallback(() => {\n    if (token0Balance && strategy?.token0) {\n      const value = ethers.utils.formatUnits(\n        token0Balance?.value,\n        strategy?.token0.decimals\n      );\n      setAmount0(value);\n\n      if (liquidityRatio && depositType === \"BOTH\") {\n        setAmount1((Number(value) * liquidityRatio).toString());\n      }\n    }\n  }, [depositType, liquidityRatio, strategy?.token0, token0Balance]);\n\n  const handleToken1Max = useCallback(() => {\n    if (token1Balance && strategy?.token1) {\n      const value = ethers.utils.formatUnits(\n        token1Balance?.value,\n        strategy?.token1.decimals\n      );\n\n      setAmount1(value);\n      if (liquidityRatio && depositType === \"BOTH\") {\n        setAmount0((Number(value) / liquidityRatio).toString());\n      }\n    }\n  }, [depositType, liquidityRatio, strategy?.token1, token1Balance]);\n\n  const handleAmount0Change = useCallback(\n    (e: any) => {\n      const value = e.target.value;\n\n      setAmount0(value);\n      if (liquidityRatio && depositType === \"BOTH\") {\n        setAmount1((Number(value) * liquidityRatio).toString());\n      }\n    },\n    [depositType, liquidityRatio]\n  );\n\n  const handleAmount1Change = useCallback(\n    (e: any) => {\n      const value = e.target.value;\n\n      setAmount1(value);\n      if (liquidityRatio && depositType === \"BOTH\") {\n        setAmount0((Number(value) / liquidityRatio).toString());\n      }\n    },\n    [depositType, liquidityRatio]\n  );\n\n  const approveToken0 = useCallback(() => {\n    if (!address || !provider) return;\n\n    setApprove0Loading(true);\n\n    approveStrategyToken(address, 0, strategyAddress, provider)\n      .then((data) => {\n        if (!data) return;\n\n        data.wait(1).then(() => {\n          // TODO: show toast\n          fetchAllowances();\n          setApprove0Loading(false);\n          console.log(\"transaction success\");\n        });\n      })\n      .catch((e) => {\n        setApprove0Loading(false);\n        console.error(e);\n      });\n  }, [address, fetchAllowances, provider, strategyAddress]);\n\n  const approveToken1 = useCallback(() => {\n    if (!address || !provider) return;\n\n    setApprove1Loading(true);\n\n    approveStrategyToken(address, 1, strategyAddress, provider)\n      .then((data) => {\n        if (!data) return;\n\n        data.wait(1).then(() => {\n          fetchAllowances();\n          setApprove1Loading(false);\n          // TODO: show toast\n          console.log(\"transaction success\");\n        });\n      })\n      .catch((e) => {\n        setApprove1Loading(false);\n        console.error(e);\n      });\n  }, [address, fetchAllowances, provider, strategyAddress]);\n\n  const deposit = useCallback(() => {\n    if (!address || !provider) return;\n\n    setDepositLoading(true);\n\n    depositLP(\n      address,\n      amount0 ?? \"0\",\n      amount1 ?? \"0\",\n      strategyAddress,\n      provider\n    )\n      .then((data) => {\n        if (!data) return;\n\n        data.wait(1).then(() => {\n          refetchBalance0();\n          refetchBalance1();\n          // TODO: show toast\n          setDepositLoading(false);\n          console.log(\"transaction success\");\n        });\n      })\n      .catch((e) => {\n        setDepositLoading(false);\n        console.error(e);\n      });\n  }, [\n    address,\n    amount0,\n    amount1,\n    provider,\n    refetchBalance0,\n    refetchBalance1,\n    strategyAddress,\n  ]);\n\n  const remove = useCallback(() => {\n    if (!address || !provider || !userShare) return;\n\n    setWithdrawLoading(true);\n\n    const sharesToRemove = Number(userShare) * (Number(removePercentage) / 100);\n\n    removeLP(address, sharesToRemove, strategyAddress, provider)\n      .then((data) => {\n        if (!data) return;\n\n        data.wait(1).then(() => {\n          fetchUserShares();\n          // TODO: show toast\n          setWithdrawLoading(false);\n          console.log(\"transaction success\");\n        });\n      })\n      .catch((e) => {\n        setWithdrawLoading(false);\n        console.error(e);\n      });\n  }, [\n    address,\n    fetchUserShares,\n    provider,\n    removePercentage,\n    strategyAddress,\n    userShare,\n  ]);\n\n  if (!isMounted) return null;\n\n  return (\n    <>\n      <div className=\"p-4 font-sans bg-zinc-100 rounded-lg flex flex-col w-full max-w-lg\">\n        <div className=\"p-4 bg-white rounded-lg\">\n          <div className=\"flex flex-col space-y-4 text-sm\">\n            <div className=\"flex flex-col\">\n              <span className=\"text-zinc-800 font-bold tracking-wide text-lg\">\n                {strategy?.title}\n              </span>\n              <span className=\"text-zinc-400 text-xs pt-0.5\">\n                {strategy?.subTitle}\n              </span>\n            </div>\n            <div className=\"flex flex-col space-y-2\">\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-zinc-500\">TVL</span>\n                <span>\n                  $\n                  {strategy?.aum &&\n                    parseFloat(strategy?.aum.toFixed(4)).toLocaleString(\n                      \"en-US\"\n                    )}\n                </span>\n              </div>\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-zinc-500\">Share Price</span>\n                <span>\n                  $\n                  {strategy?.sharePrice &&\n                    parseFloat(strategy?.sharePrice.toFixed(4)).toLocaleString(\n                      \"en-US\"\n                    )}\n                </span>\n              </div>\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-zinc-500\">Returns Since Inception</span>\n                <span>\n                  {strategy?.sinceInception?.USD &&\n                    parseFloat(strategy?.sinceInception.USD.toFixed(2))}\n                  %\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"p-4 mt-4 bg-white rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-zinc-500 font-medium uppercase text-sm\">\n              Current Range\n            </span>\n            <div className=\"flex items-center space-x-2 bg-zinc-200 rounded-md p-1\">\n              <button\n                className={clsx(\n                  \"appearance-none text-xs focus:outline-none px-4 py-2 text-zinc-800 rounded\",\n                  rangeToken?.symbol === strategy?.token0.symbol && \" bg-white\"\n                )}\n                onClick={() => {\n                  setRangeToken(strategy?.token0);\n                }}\n              >\n                {strategy?.token0.symbol}\n              </button>\n              <button\n                className={clsx(\n                  \"appearance-none text-xs focus:outline-none px-4 py-2 text-zinc-800 rounded\",\n                  rangeToken?.symbol === strategy?.token1.symbol && \"bg-white\"\n                )}\n                onClick={() => {\n                  setRangeToken(strategy?.token1);\n                }}\n              >\n                {strategy?.token1.symbol}\n              </button>\n            </div>\n          </div>\n          {currentRange && (\n            <p className=\"mt-3 font-mono\">\n              {rangeToken?.symbol === strategy?.token0.symbol\n                ? currentRange.lowerTickInA\n                : currentRange.lowerTickInB}{\" \"}\n              -{\" \"}\n              {rangeToken?.symbol === strategy?.token1.symbol\n                ? currentRange.upperTickInB\n                : currentRange.upperTickInA}{\" \"}\n              <span className=\"pl-2 text-sm\">\n                {rangeToken?.symbol === strategy?.token0.symbol\n                  ? strategy?.token1.symbol\n                  : strategy?.token0.symbol}{\" \"}\n                per{\" \"}\n                {rangeToken?.symbol === strategy?.token1.symbol\n                  ? strategy?.token1.symbol\n                  : strategy?.token0.symbol}\n              </span>\n            </p>\n          )}\n        </div>\n\n        <div className=\"p-4 mt-4 bg-white rounded-lg\">\n          <Tab.Group>\n            <Tab.List className=\"flex space-x-1 rounded-xl bg-zinc-100 p-1\">\n              <Tab\n                className={({ selected }) =>\n                  clsx(\n                    \"w-full rounded-lg py-2.5 text-sm font-medium leading-5 text-zinc-700 focus:outline-none\",\n                    selected\n                      ? \"bg-white shadow\"\n                      : \"text-zinc-100 hover:bg-white/[0.12]\"\n                  )\n                }\n              >\n                Deposit\n              </Tab>\n              <Tab\n                className={({ selected }) =>\n                  clsx(\n                    \"w-full rounded-lg py-2.5 text-sm font-medium leading-5 text-zinc-700 focus:outline-none\",\n                    selected\n                      ? \"bg-white shadow\"\n                      : \"text-zinc-100 hover:bg-white/[0.12]\"\n                  )\n                }\n              >\n                Withdraw\n              </Tab>\n            </Tab.List>\n            <Tab.Panels>\n              <Tab.Panel>\n                <div className=\"px-1 mt-2\">\n                  {liquidityRatio ? (\n                    <div className=\"space-y-2\">\n                      <div className=\"flex space-x-2 justify-end py-2\">\n                        <div className=\"flex items-center space-x-2 bg-zinc-200 rounded-md p-1\">\n                          <button\n                            className={clsx(\n                              \"appearance-none text-xs focus:outline-none px-4 py-2 text-zinc-800 rounded\",\n                              depositType === \"BOTH\" && \" bg-white\"\n                            )}\n                            onClick={() => setDepositType(\"BOTH\")}\n                          >\n                            Both\n                          </button>\n                          <button\n                            className={clsx(\n                              \"appearance-none text-xs focus:outline-none px-4 py-2 text-zinc-800 rounded\",\n                              depositType === \"SINGLE\" && \"bg-white\"\n                            )}\n                            onClick={() => setDepositType(\"SINGLE\")}\n                          >\n                            Single\n                          </button>\n                        </div>\n                        {depositType === \"SINGLE\" && (\n                          <div className=\"flex items-center space-x-2 bg-zinc-200 rounded-md p-1\">\n                            <button\n                              className={clsx(\n                                \"appearance-none text-xs focus:outline-none px-4 py-2 text-zinc-800 rounded\",\n                                singleSideToken?.symbol ===\n                                  strategy?.token0.symbol && \" bg-white\"\n                              )}\n                              onClick={() => {\n                                setAmount0(\"\");\n                                setSingleSideToken(strategy?.token0);\n                              }}\n                            >\n                              {strategy?.token0.symbol}\n                            </button>\n                            <button\n                              className={clsx(\n                                \"appearance-none text-xs focus:outline-none px-4 py-2 text-zinc-800 rounded\",\n                                singleSideToken?.symbol ===\n                                  strategy?.token1.symbol && \"bg-white\"\n                              )}\n                              onClick={() => {\n                                setAmount1(\"\");\n                                setSingleSideToken(strategy?.token1);\n                              }}\n                            >\n                              {strategy?.token1.symbol}\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                      {depositType === \"BOTH\" ? (\n                        <div className=\"space-y-2\">\n                          <div className=\"border border-zinc-200/50 rounded-2xl w-full p-2 flex flex-col items-end bg-zinc-50\">\n                            <div className=\"flex\">\n                              <input\n                                value={amount0}\n                                type=\"number\"\n                                className=\"pt-4 pb-2 pl-2 pr-6 text-zinc-800 font-mono text-4xl focus:outline-none flex-1 w-full bg-transparent\"\n                                placeholder=\"0.00\"\n                                onChange={(e) => handleAmount0Change(e)}\n                              />\n                              <div className=\"pt-4 flex flex-col items-end space-y-2\">\n                                <div className=\"py-0.5 rounded-full bg-zinc-200 text-zinc-800 font-medium w-[64px] flex items-center justify-center\">\n                                  {strategy?.token0.symbol}\n                                </div>\n                              </div>\n                            </div>\n                            {token0Balance && (\n                              <span\n                                className=\"text-zinc-500 text-sm px-2 hover:underline hover:cursor-pointer\"\n                                onClick={handleToken0Max}\n                              >\n                                Balance: {token0Balance?.formatted ?? \"0\"}\n                              </span>\n                            )}\n                          </div>\n                          <div className=\"border border-zinc-200/50 rounded-2xl w-full p-2 flex flex-col items-end bg-zinc-50\">\n                            <div className=\"flex\">\n                              <input\n                                value={amount1}\n                                type=\"number\"\n                                className=\"pt-4 pb-2 pl-2 pr-6 text-zinc-800 font-mono text-4xl focus:outline-none flex-1 w-full bg-transparent\"\n                                placeholder=\"0.00\"\n                                onChange={(e) => handleAmount1Change(e)}\n                              />\n                              <div className=\"pt-4 flex flex-col items-end space-y-2\">\n                                <div className=\"py-0.5 rounded-full bg-zinc-200 text-zinc-800 font-medium w-[64px] flex items-center justify-center\">\n                                  {strategy?.token1.symbol}\n                                </div>\n                              </div>\n                            </div>\n                            {token1Balance && (\n                              <span\n                                className=\"text-zinc-500 text-sm px-2 hover:underline hover:cursor-pointer\"\n                                onClick={handleToken1Max}\n                              >\n                                Balance: {token1Balance?.formatted ?? \"0\"}\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      ) : (\n                        <SingleInput\n                          amount={\n                            singleSideTokenType === SingleSideTokenType.ZERO\n                              ? amount0\n                              : amount1\n                          }\n                          setAmount={\n                            singleSideTokenType === SingleSideTokenType.ZERO\n                              ? setAmount0\n                              : setAmount1\n                          }\n                          balance={\n                            singleSideTokenType === SingleSideTokenType.ZERO\n                              ? token0Balance?.formatted\n                              : token1Balance?.formatted\n                          }\n                          rawBalance={\n                            singleSideTokenType === SingleSideTokenType.ZERO\n                              ? token0Balance?.value\n                              : token1Balance?.value\n                          }\n                          token={singleSideToken}\n                        />\n                      )}\n                    </div>\n                  ) : (\n                    <SingleInput\n                      amount={\n                        singleSideTokenType === SingleSideTokenType.ZERO\n                          ? amount0\n                          : amount1\n                      }\n                      setAmount={\n                        singleSideTokenType === SingleSideTokenType.ZERO\n                          ? setAmount0\n                          : setAmount1\n                      }\n                      balance={\n                        singleSideTokenType === SingleSideTokenType.ZERO\n                          ? token0Balance?.formatted\n                          : token1Balance?.formatted\n                      }\n                      rawBalance={\n                        singleSideTokenType === SingleSideTokenType.ZERO\n                          ? token0Balance?.value\n                          : token1Balance?.value\n                      }\n                      token={singleSideToken}\n                    />\n                  )}\n\n                  <div className=\"mt-4\">\n                    {!isConnected ? (\n                      <Wallet />\n                    ) : strategy && (!isToken0Approved || !isToken1Approved) ? (\n                      <div className={`flex items-center space-x-2`}>\n                        {!isToken0Approved && (\n                          <button\n                            className={`w-full p-4 rounded-lg text-sm bg-[${color}] bg-opacity-20 text-[#2463EB] font-medium disabled:bg-zinc-100 disabled:text-zinc-500 disabled:cursor-not-allowed`}\n                            disabled={approve0Loading}\n                            onClick={() => approveToken0()}\n                          >\n                            {approve0Loading\n                              ? \"Approving...\"\n                              : `Approve ${strategy?.token0.symbol}`}\n                          </button>\n                        )}\n                        {!isToken1Approved && (\n                          <button\n                            className={`w-full p-4 rounded-lg text-sm bg-[${color}] bg-opacity-20 text-[#2463EB] font-medium disabled:bg-zinc-100 disabled:text-zinc-500 disabled:cursor-not-allowed`}\n                            disabled={approve1Loading}\n                            onClick={() => approveToken1()}\n                          >\n                            {approve1Loading\n                              ? \"Approving...\"\n                              : `Approve ${strategy?.token1.symbol}`}\n                          </button>\n                        )}\n                      </div>\n                    ) : (\n                      <button\n                        className={`w-full p-4 rounded-lg text-sm bg-[${color}] text-white font-medium disabled:bg-zinc-100 disabled:text-zinc-500 disabled:cursor-not-allowed`}\n                        disabled={!!depositError || depositLoading}\n                        onClick={() => deposit()}\n                      >\n                        {depositError\n                          ? depositError\n                          : depositLoading\n                          ? \"Depositing...\"\n                          : \"Deposit\"}\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </Tab.Panel>\n              <Tab.Panel>\n                <div className=\"px-1 mt-2\">\n                  <div className=\"flex items-center justify-between mt-4\">\n                    <span className=\"text-4xl text-zinc-800 font-medium\">\n                      {removePercentage}%\n                    </span>\n                    <div className=\"flex items-center space-x-2\">\n                      {[25, 50, 75, 100].map((val, idx) => {\n                        return (\n                          <>\n                            <button\n                              key={idx}\n                              className={clsx(\n                                \"px-2 py-1 text-sm border rounded\",\n                                removePercentage === val.toString()\n                                  ? \"bg-[#2463EB] text-white\"\n                                  : \"border-zinc-200 bg-zinc-50 text-zinc-800\"\n                              )}\n                              onClick={() =>\n                                setRemovePercentage(val.toString())\n                              }\n                            >\n                              {val === 100 ? \"Max\" : `${val}%`}\n                            </button>\n                          </>\n                        );\n                      })}\n                    </div>\n                  </div>\n                  <input\n                    aria-labelledby=\"input slider\"\n                    list=\"percentages\"\n                    max=\"100\"\n                    min=\"1\"\n                    step=\"1\"\n                    type=\"range\"\n                    className=\"mt-3 w-full\"\n                    value={removePercentage}\n                    onChange={(e) => setRemovePercentage(e.target.value)}\n                  />\n\n                  <div className=\"flex flex-col space-y-2 mt-4\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-zinc-500\">Your Share</span>\n                      <span className=\"font-medium\">\n                        {userShare && parseFloat(Number(userShare).toFixed(4))}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-zinc-500\">\n                        {strategy?.token0.symbol}\n                      </span>\n                      <span className=\"font-medium\">\n                        {strategy?.amount0 &&\n                          parseFloat(\n                            (\n                              strategyAmount0 *\n                              userShareFraction *\n                              (Number(removePercentage) / 100)\n                            ).toFixed(4)\n                          )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-zinc-500\">\n                        {strategy?.token1.symbol}\n                      </span>\n                      <span className=\"font-medium\">\n                        {strategy?.amount1 &&\n                          parseFloat(\n                            (\n                              strategyAmount1 *\n                              userShareFraction *\n                              (Number(removePercentage) / 100)\n                            ).toFixed(4)\n                          )}\n                      </span>\n                    </div>\n                  </div>\n\n                  <button\n                    className={`mt-6 w-full p-4 rounded-lg text-sm bg-[${color}] text-white font-medium disabled:bg-zinc-100 disabled:text-zinc-500 disabled:cursor-not-allowed`}\n                    disabled={!!withdrawError || withdrawLoading}\n                    onClick={() => remove()}\n                  >\n                    {withdrawError\n                      ? withdrawError\n                      : withdrawLoading\n                      ? \"Withdrawing...\"\n                      : \"Withdraw\"}\n                  </button>\n                </div>\n              </Tab.Panel>\n            </Tab.Panels>\n          </Tab.Group>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LiquidityCard;\n","import React, { FC, useCallback } from \"react\";\nimport { BigNumber, ethers } from \"ethers\";\nimport { Token } from \"@defiedge/sdk/dist/src/types/strategyQueryData\";\n\ninterface SingleInputProps {\n  token: Token | undefined;\n  amount: string;\n  setAmount: (amount: string) => void;\n  balance: string | undefined;\n  rawBalance: BigNumber | undefined;\n}\n\nconst SingleInput: FC<SingleInputProps> = ({\n  amount,\n  setAmount,\n  token,\n  balance,\n  rawBalance,\n}) => {\n  const handleTokenMax = useCallback(() => {\n    if (rawBalance && token) {\n      setAmount(ethers.utils.formatUnits(rawBalance, token.decimals));\n    }\n  }, [rawBalance, setAmount, token]);\n\n  const handleAmountChange = useCallback(\n    (e: any) => {\n      const value = e.target.value;\n\n      if (!isNaN(value) && Number(value) >= 0) {\n        setAmount(value);\n      }\n    },\n    [setAmount]\n  );\n\n  return (\n    <>\n      <div className=\"border border-zinc-200/50 rounded-2xl w-full p-2 flex flex-col items-end bg-zinc-50\">\n        <div className=\"flex\">\n          <input\n            value={amount}\n            type=\"number\"\n            className=\"pt-4 pb-2 pl-2 pr-6 text-zinc-800 font-mono text-4xl focus:outline-none flex-1 w-full bg-transparent\"\n            placeholder=\"0.00\"\n            onChange={(e) => handleAmountChange(e)}\n          />\n          <div className=\"pt-4 flex flex-col items-end space-y-2\">\n            <div className=\"py-0.5 rounded-full bg-zinc-200 text-zinc-800 font-medium w-[64px] flex items-center justify-center\">\n              {token?.symbol}\n            </div>\n          </div>\n        </div>\n        {balance && (\n          <span\n            className=\"text-zinc-500 text-sm px-2 hover:underline hover:cursor-pointer\"\n            onClick={handleTokenMax}\n          >\n            Balance: {balance ?? \"0\"}\n          </span>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SingleInput;\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","useIsMounted","_a","useState","mounted","setMounted","useEffect","SingleSideTokenType","Wallet","React","ConnectKitButton","Custom","isConnected","show","truncatedAddress","ensName","className","onClick","SingleInput","amount","setAmount","token","balance","rawBalance","handleTokenMax","useCallback","ethers","utils","formatUnits","decimals","handleAmountChange","e","value","target","isNaN","Number","placeholder","onChange","symbol","LiquidityCard","strategyAddress","network","_e","color","isMounted","_f","useAccount","address","signer","useSigner","provider","_g","strategy","setStrategy","_h","isToken0Approved","setIsToken0Approved","_j","isToken1Approved","setIsToken1Approved","_k","liquidityRatio","setLiquidityRatio","_l","userShare","setUserShare","_m","userShareFraction","setUserShareFraction","_o","strategyAmount0","setStrategyAmount0","_p","strategyAmount1","setStrategyAmount1","_q","currentRange","setCurrentRange","_r","amount0","setAmount0","_s","amount1","setAmount1","_t","removePercentage","setRemovePercentage","_u","depositType","setDepositType","_v","token0","singleSideToken","setSingleSideToken","_w","depositError","setDepositError","_x","withdrawError","setWithdrawError","_y","rangeToken","setRangeToken","singleSideTokenType","useMemo","ZERO","ONE","_z","depositLoading","setDepositLoading","_0","withdrawLoading","setWithdrawLoading","_1","approve0Loading","setApprove0Loading","_2","approve1Loading","setApprove1Loading","Promise","all","getStrategyInfo","getStrategyMetaData","then","info","metadata","getLiquidityRatio","getRanges","ranges","fetchAllowances","isStrategyTokenApproved","token1","_3","useBalance","id","token0Balance","refetchBalance0","_4","token1Balance","refetchBalance1","strategyToken","useToken","formatted","fetchUserShares","getUserDeshareBalance","data","fraction","totalSupply","axios","get","Object","entries","SupportedChainId","find","amount0Total","amount1Total","catch","console","error","handleToken0Max","toString","handleToken1Max","handleAmount0Change","handleAmount1Change","approveToken0","approveStrategyToken","wait","log","approveToken1","deposit","depositLP","remove","sharesToRemove","removeLP","title","subTitle","aum","parseFloat","toFixed","toLocaleString","sharePrice","sinceInception","USD","clsx","lowerTickInA","lowerTickInB","upperTickInB","upperTickInA","Tab","Group","List","selected","Panels","Panel","disabled","map","val","idx","key","list","max","min","step"],"mappings":"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"}